.\"
.\" Copyright (c) 2016 Tobias Kortkamp <t@tobik.me>
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
.\" SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
.\" OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd July 28, 2016
.Dt SIMPLESTROKE 1
.Os
.Sh NAME
.Nm simplestroke
.Nd "a gesture recognition application"
.Sh SYNOPSIS
.Nm
.Op Fl s
.Sh DESCRIPTION
.Nm
is a simple application for detecting mouse gestures.  There are ten
pre-defined mouse gesture you can choose from.

With no arguments
.Nm
starts in gesture detection mode.  Draw your gesture and then confirm by
clicking any mouse button.
.Pp
More specifically,
.Nm
reacts on the release of any mouse button.  This makes it possible to
start
.Nm
with a pressed mouse button and start gesture analysis after releasing it.
.Pp
.Nm
prints the name of the detected gesture, if any.  The output can then
be used in a simple shell script to execute commands.  Use
.Fl s
to print a small script template you can base your script on.
.Sh GESTURES
The following gestures are supported.  The names are derived from the
direction you would draw them in.
.Ss STRAIGHT LINE GESTURES
.Bd -literal
TopDown
DownTop
LeftRight
RightLeft
.Ed
.Ss DIAGONAL GESTURES
.Bd -literal
TopLeftDown
TopRightDown
DownLeftTop
DownRightTop
.Ed
.Ss "Z" GESTURES
.Bd -literal
LeftZ
RightZ
.Ed
.Ss SQUARE GESTURES
.Bd -literal
SquareLeft
SquareRight
.Ed
.Sh EXAMPLES
The following examples assume that \fBsimplestroke.sh\fP is the shell
script you call
.Nm
from.
.Ss STARTING DETECTION
To start detection with \fBxbindkeys\fP while holding down the 9th
mouse button add this to your
.Pa ~/.xbindkeysrc
.Bd -literal -offset indent
"simplestroke.sh"
        b:9
.Ed
.Pp
Hold the mouse button and after you are finished drawing your gesture,
release it.

To start gesture detection with your keyboard add this to your
.Pa ~/.xbindkeysrc
.Bd -literal -offset indent
"simplestroke.sh"
        Mod4 + c + Release
.Ed
.Pp
or if you use \fBi3\fP add this to your
.Pa ~/.config/i3/config
.Bd -literal -offset indent
bindsym --release $mod+c exec simplestroke.sh
.Ed
.Pp
the release options prevents \fBxbindkeys\fP or \fBi3\fP from spawning multiple
.Nm
processes.
.El
.Sh SEE ALSO
.Xr i3 1
.Xr xbindkeys 1
.Sh AUTHORS
.An Tobias Kortkamp Aq Mt t@tobik.me
.Pp
.Nm
is inspired and based on \fBeasystroke\fP 0.6.0 written by Thomas Jaeger
.Aq Lk https://github.com/thjaeger/easystroke .
